"use strict";var ScrollAnimate=()=>{const e=e=>!(e.down||e.up),t=(e,t,n="")=>{e.className=`${t} ${n}`.trim()};return{isInView:({top:e,bottom:t},n)=>e+n<(()=>document.documentElement.clientHeight)()&&t-n>0,run(n,{value:s,modifiers:o},{offset:i,isUpwards:r,previousClassName:a=""}){if((e=>!e.in&&e.out)(s))return void console.warn("animate-on-scroll","'out' parameter can't be used alone. 'in' required");let l=n.getBoundingClientRect();if(!this.isInView(l,i)){const i=s.out||"";return o.repeat&&(e(s)||i)?t(n,a,i):void 0}if(e(s)){const e=s.in||s;return t(n,a,e)}if(o.repeat||(e=>e.down&&e.up)(s)||!((e="",t="")=>e.trim()!==t.trim())(n.className,a)){const e=r?s.up:s.down;return t(n,a,e)}return(({params:e,isUpwards:t,repeat:n})=>n&&(t&&e.down||!t&&e.up))({params:s,isUpwards:r,...o})?t(n,a):void 0}}},index={ScrollAnimate:ScrollAnimate,install(e){e.directive("animate-onscroll",{inserted(e,t){const n=ScrollAnimate(Date.now()),s=e.className,o=parseInt(e.dataset.animateOnscrollOffset||0);let i=window.pageYOffset;window.addEventListener("scroll",function(){let r=window.pageYOffset||document.documentElement.scrollTop;const a=r<i;n.run(e,t,{offset:o,isUpwards:a,previousClassName:s}),i=r<=0?0:r},!1)}})}};module.exports=index;
